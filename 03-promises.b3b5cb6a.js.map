{"mappings":"AAGaA,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,cAEJC,EAAM,CACVL,MAAOC,EAAMK,MACbJ,KAAMA,EAAKI,MACXH,OAAOA,EAAOG,OAKhB,SAASC,EAAcC,EAAUR,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KAET,MAAMC,EAAM,CAAER,SAAUA,EAAUR,MAAOA,GAErCS,EACFI,EAAQG,GAERF,EAAOE,KAERhB,MAdPH,EAAMO,cAAca,QAkBlB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAIF,OAAQe,IAAK,CACnC,IAAIC,EAAWD,EAAI,EACfE,EAAQC,OAAOhB,EAAIL,OAASK,EAAIH,KAAOgB,EAE/CX,EAAcY,EAAUC,GAAOE,MAAK,EAACd,SAAEA,EAAQR,MAAEA,MAC/CuB,QAAQC,IAAI,uBAAqBhB,QAAiBR,UAEnDyB,OAAM,EAACjB,SAAEA,EAAQR,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBhB,QAAeR","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Report } from 'notiflix/build/notiflix-report-aio';\n  \n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n \n  const arg = {\n    delay: delay.value,\n    step: step.value,\n    amount:amount.value,\n  };    \n  \n  event.currentTarget.reset();  \n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n\n        const obj = { position: position, delay: delay };\n        \n        if (shouldResolve) {          \n          resolve(obj)\n        } else {\n          reject(obj)\n        }\n      }, delay);\n    });\n  };    \n    \n    for (let i = 0; i < arg.amount; i++) {\n      let position = i + 1;\n      let delay = Number(arg.delay) + arg.step * i;       \n     \n  createPromise(position, delay).then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n};\n};\n"],"names":["document","querySelector","addEventListener","event","preventDefault","elements","delay","delay1","step","amount","currentTarget","arg","value","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","obj","reset","i","position1","delay2","Number","then","console","log","catch"],"version":3,"file":"03-promises.b3b5cb6a.js.map"}