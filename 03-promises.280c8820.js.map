{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KAET,MAAMC,EAAM,CAAET,SAAUA,EAAUC,MAAOA,GAErCC,EACFI,EAAQG,GAERF,EAAOE,KAERR,MAhBMS,SAASC,cAAc,SAE/BC,iBAAiB,UAkBtB,SAAsBC,GACpBA,EAAMC,iBACN,MACGb,OAAQc,cAAeC,EAAQ,GAC/BC,MAAOF,cAAeE,EAAO,GAC7BC,QAASH,cAAeG,EAAS,IAClCL,EAAMM,cAER,IAAIC,EAAYJ,EAEhB,IAAK,IAAIK,EAAW,EAAGA,GAAYH,EAAQG,IAEzCtB,EAAcsB,EAAUD,GAAWE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACnDJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,OACnDwB,QAAMC,IAAI,uBAAqB1B,QAAiBC,UAEnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOK,QAAQ,sBAAoB5B,QAAiBC,OAClDwB,QAAMC,IAAI,sBAAoB1B,QAAeC,UAEjDmB,GAAaH","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n\n      const obj = { position: position, delay: delay };\n\n      if (shouldResolve) {\n        resolve(obj)\n      } else {\n        reject(obj)\n      }\n    }, delay);\n  });\n};\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n     delay:{ valueAsNumber: delay = 0 },\n     step:{ valueAsNumber: step = 0 },\n     amount:{ valueAsNumber: amount = 0 }\n} = event.currentTarget;\n   \n  let delayProm = delay;\n\n  for (let position = 1; position <= amount; position++) {\n\n    createPromise(position, delayProm).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delayProm += step;\n  };\n\n  // event.currentTarget.reset();\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","obj","document","querySelector","addEventListener","event","preventDefault","valueAsNumber","delay1","step","amount","currentTarget","delayProm","position1","then","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.280c8820.js.map"}